<?phpadd_action( 'widgets_init', 'load_feed_widget' );function load_feed_widget() {	register_widget( 'pxls_feed_widget' );}class pxls_feed_widget extends WP_Widget {	function pxls_feed_widget() {		/* Widget settings. */		$widget_ops = array( 'classname' => 'pxls-feed', 'description' => 'A widget that shows an RSS Feed' );		/* Widget control settings. */		$control_ops = array( 'width' => 300, 'height' => 350, 'id_base' => 'pxls-feed-widget' );		/* Create the widget. */		$this->WP_Widget( 'pxls-feed-widget', 'PXLS Feed Widget', $widget_ops, $control_ops );	}		function widget( $args, $instance ) {		extract( $args );		/* User-selected settings. */		$title = apply_filters('widget_title', $instance['title'] );		$url = $instance['url'];		$itemcount = $instance['itemcount'];		/* Before widget (defined by themes). */		echo $before_widget;		/* Title of widget (before and after defined by themes). */		if ( $title ) echo $before_title . $title . $after_title;				include_once(ABSPATH . WPINC . '/feed.php');		// Get a SimplePie feed object from the specified feed source.		$rss = fetch_feed( $url );		if (!is_wp_error( $rss ) ) : // Checks that the object is created correctly 			// Figure out how many total items there are, but limit it to the requested item count. 			$maxitems = $rss->get_item_quantity($itemcount); 			// Build an array of all the items, starting with element 0 (first element).			$rss_items = $rss->get_items(0, $maxitems); 		endif;		?>		<ul>			<?php if ($maxitems == 0) echo '<li>No items.</li>';			else			// Loop through each feed item and display each item as a hyperlink.			foreach ( $rss_items as $item ) : ?>			<li>				<a href='<?php echo esc_url( $item->get_permalink() ); ?>' target='_blank'><?php echo esc_html( $item->get_title() ); ?></a>				<p class="description"><?php echo esc_html( $item->get_description() ); ?></p>				<p class="posted-date"><?php echo esc_html( $item->get_date(get_option('date_format')) ); ?></p>			</li>			<?php endforeach; ?>		</ul>				<?php		/* After widget (defined by themes). */		echo $after_widget;	}		function update( $new_instance, $old_instance ) {		$instance = $old_instance;		/* Strip tags (if needed) and update the widget settings. */		$instance['title'] = strip_tags( $new_instance['title'] );		$instance['url'] = strip_tags( $new_instance['url'] );		$instance['itemcount'] = strip_tags( $new_instance['itemcount'] );		return $instance;	}			function form( $instance ) {		/* Set up some default widget settings. */		$defaults = array( 'title' => '', 'url' => '', 'itemcount' => '' );		$instance = wp_parse_args( (array) $instance, $defaults ); ?>				<p>			<label for="<?php echo $this->get_field_id( 'title' ); ?>">Title:</label>			<input id="<?php echo $this->get_field_id( 'title' ); ?>" name="<?php echo $this->get_field_name( 'title' ); ?>" value="<?php echo $instance['title']; ?>" style="width:100%;" />		</p>		<p>			<label for="<?php echo $this->get_field_id( 'url' ); ?>">URL:</label>			<input id="<?php echo $this->get_field_id( 'url' ); ?>" name="<?php echo $this->get_field_name( 'url' ); ?>" value="<?php echo $instance['url']; ?>" style="width:100%;" />		</p>		<p>			<label for="<?php echo $this->get_field_id( 'itemcount' ); ?>">Item Count:</label>			<input id="<?php echo $this->get_field_id( 'itemcount' ); ?>" name="<?php echo $this->get_field_name( 'itemcount' ); ?>" value="<?php echo $instance['itemcount']; ?>" style="width:100%;" />		</p><?php	}} ?>